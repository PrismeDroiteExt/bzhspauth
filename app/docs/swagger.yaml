basePath: /api/v1/auth
definitions:
  github_com_prismedroiteext_breizhsport_auth-service_internal_dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  github_com_prismedroiteext_breizhsport_auth-service_internal_dto.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  github_com_prismedroiteext_breizhsport_auth-service_internal_dto.TokenResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
    type: object
  github_com_prismedroiteext_breizhsport_auth-service_internal_dto.UpdateProfileRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    type: object
  github_com_prismedroiteext_breizhsport_auth-service_internal_dto.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
host: localhost:8082
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Authentication and authorization service for BreizhSport application
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: BreizhSport Auth Service API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return JWT tokens
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_prismedroiteext_breizhsport_auth-service_internal_dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_prismedroiteext_breizhsport_auth-service_internal_dto.TokenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      description: Logout the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - auth
  /me:
    get:
      description: Get authenticated user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_prismedroiteext_breizhsport_auth-service_internal_dto.UserResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - auth
    put:
      consumes:
      - application/json
      description: Update the authenticated user's profile information
      parameters:
      - description: Profile details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_prismedroiteext_breizhsport_auth-service_internal_dto.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user profile
      tags:
      - auth
  /refresh:
    post:
      consumes:
      - application/json
      description: Get new access token using refresh token
      parameters:
      - description: Refresh token
        in: header
        name: Refresh-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_prismedroiteext_breizhsport_auth-service_internal_dto.TokenResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh access token
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_prismedroiteext_breizhsport_auth-service_internal_dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register new user
      tags:
      - auth
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
